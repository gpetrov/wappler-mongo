{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "offset"
      },
      {
        "type": "text",
        "name": "limit"
      },
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ],
    "$_POST": [
      {
        "type": "text",
        "name": "token"
      },
      {
        "type": "text",
        "name": "search"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "exec",
        "module": "core",
        "action": "exec",
        "options": {
          "exec": "secure"
        }
      },
      {
        "name": "query",
        "module": "dbconnector",
        "action": "paged",
        "options": {
          "connection": "db",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "cars",
                "column": "id"
              },
              {
                "table": "cars",
                "column": "make"
              },
              {
                "table": "cars",
                "column": "model"
              },
              {
                "table": "cars",
                "column": "year"
              }
            ],
            "table": {
              "name": "cars"
            },
            "joins": [],
            "query": "SELECT id, make, model, year\nFROM cars\nWHERE make LIKE :P1 /* {{$_POST.search}} */",
            "params": [
              {
                "operator": "contains",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_POST.search}}"
              }
            ],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "cars.make",
                  "field": "cars.make",
                  "type": "string",
                  "operator": "contains",
                  "value": "{{$_POST.search}}",
                  "data": {
                    "table": "cars",
                    "column": "make",
                    "type": "text"
                  },
                  "operation": "LIKE"
                }
              ],
              "conditional": "{{$_POST.search}}",
              "valid": true
            }
          }
        },
        "meta": [
          {
            "name": "offset",
            "type": "number"
          },
          {
            "name": "limit",
            "type": "number"
          },
          {
            "name": "total",
            "type": "number"
          },
          {
            "name": "page",
            "type": "object",
            "sub": [
              {
                "name": "offset",
                "type": "object",
                "sub": [
                  {
                    "name": "first",
                    "type": "number"
                  },
                  {
                    "name": "prev",
                    "type": "number"
                  },
                  {
                    "name": "next",
                    "type": "number"
                  },
                  {
                    "name": "last",
                    "type": "number"
                  }
                ]
              },
              {
                "name": "current",
                "type": "number"
              },
              {
                "name": "total",
                "type": "number"
              }
            ]
          },
          {
            "name": "data",
            "type": "array",
            "sub": [
              {
                "name": "id",
                "type": "text"
              },
              {
                "name": "make",
                "type": "text"
              },
              {
                "name": "model",
                "type": "text"
              },
              {
                "name": "year",
                "type": "text"
              }
            ]
          }
        ],
        "outputType": "object",
        "output": true
      }
    ]
  }
}